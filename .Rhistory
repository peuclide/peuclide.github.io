N = length(a1_cpue))
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
p1 <- ggplot(data=x, aes(x=Year, y=mean, color = Basin)) +
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, position=position_dodge(0.3)) +
geom_line(position=position_dodge(0.3)) +
geom_point(position=position_dodge(0.3), size=3)+
scale_x_continuous(breaks=unique(x$Year))+
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ylab("CPUE Age1 Smelt")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1),
axis.text.y=element_text(size=16,hjust=1),
axis.title=element_text(size=20),
legend.text=element_text(size=20),
legend.title=element_text(size=22))
p1
cor.test(x_1$mean.MB, x_1$mean.ML, method = c("spearman"), use='complete.obs')
172-56
df3_age_1 <- ddply(df3_age_1, .(Basin, Year), transform,
prop_pop = n*prop)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(prop),
sd = sd(prop),
N = length(prop))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
shapiro.test(x_1$mean.MB)
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
shapiro.test(x_1$mean.ML)
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.NEA)
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
shapiro.test(x_1$mean.MB)
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
shapiro.test(x_1$mean.ML)
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.NEA)
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
cor.test(x_1$mean.MB, x_1$mean.ML, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.MB, x_1$mean.NEA, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.NEA, x_1$mean.ML, method = c("spearman"), use='complete.obs')
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
x <- ddply(smelt_age1, .(Basin, Year), summarize,
mean = mean(condition),
sd = sd(condition),
N = length(condition))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
shapiro.test(x_1$mean.MB)
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
shapiro.test(x_1$mean.ML)
shapiro.test(x_1$mean.ML)
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.NEA)
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
x_1 <- subset(x_1, Year > 1985)
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
head(x_1)
CPUE <- read.csv("MasterFileTrawlCPUE1987-2015.csv")
cpue <- subset(CPUE, Comment == "")
df <- smelt[, c("Basin", "Year", "Age")]
df <- subset(df, !(Age %in% c("NA", "?", NA, 0)))
df <- droplevels(df)
df$Age <- as.numeric(as.character(df$Age))
df <- ddply(df, .(Basin, Year), transform,
sum.n = length(Age))
df2 <- ddply(df, .(Basin, Age, Year), summarise,
n = length(Age), prop = n / sum.n[1])
levels(df2$Basin) <- c(unique(as.character(cpue$Basin)))
df3 <- merge(cpue, df2, by = c("Basin", "Year"))
df3_age_1 <- subset(df3, Age == 1)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE MB", ylab = "CPUE NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE ML", ylab = "CPUE ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE ML", ylab = "CPUE NEA")
0.003+	0.003+	0.018+	0.032+	0.078+	0.092+	0.175+	0.307+	0.084+	0.071+	0.040+	0.023+	0.019+	0.024+	0.009+	0.002	+0.001+	0.007+	0.001+	0.003+	0.003+	0.001+	0.001+	0.001
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles()
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 20)
m %>% addTiles()
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi",
layers = "nexrad-n0r-900913",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Weather data Â© 2012 IEM Nexrad"
)
cities <- read.csv(textConnection("
City,Lat,Long,Pop
Boston,42.3601,-71.0589,645966
Hartford,41.7627,-72.6743,125017
New York City,40.7127,-74.0059,8406000
Philadelphia,39.9500,-75.1667,1553000
Pittsburgh,40.4397,-79.9764,305841
Providence,41.8236,-71.4222,177994
"))
leaflet(cities) %>% addTiles() %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~sqrt(Pop) * 30, popup = ~City
)
nycounties <- geojsonio::geojson_read("json/nycounties.geojson",
what = "sp")
wicounties <- geojsonio::geojson_read("json/nycounties.geojson",
what = "sp")
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
wicounties <- geojsonio::geojson_read("json/wicounties.geojson",
what = "sp")
pal <- colorNumeric("viridis", NULL)
leaflet(wicounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
nycounties <- geojsonio::geojson_read("json/nycounties.geojson",
what = "sp")
pal <- colorNumeric("viridis", NULL)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
library(rgdal)
nycounties <- geojsonio::geojson_read("json/nycounties.geojson",
what = "sp")
nycounties <- rgdal::readOGR("json/nycounties.geojson", "OGRGeoJSON")
library(ggplot2)
library(plyr)
library(raster)
library(gridExtra)
library(grid)
library(ggpubr)
setwd("~/Documents/OneDrive/Documents/UVM/PhD/Smelt/Smelt_Demographic_Data")
dat <- read.csv("MasterFileSmeltBio1984-2015-2-24-16.csv", na.strings=c("","NA"))
dat <- read.csv("MasterFileSmeltBio1984-2015-2-24-16.csv", na.strings=c("","NA"))
smelt <- subset(dat, Species == "Rainbow Smelt" )
smelt <- subset(dat, Species == "Rainbow Smelt" )
smelt$Year <- as.numeric(as.character(smelt$Year))
smelt <- subset(smelt, Age %in% c(1:4))
smelt1990 <- subset(smelt, Year >= 1990)
library(ggplot2)
library(plyr)
library(raster)
library(gridExtra)
library(grid)
library(ggpubr)
setwd("~/Documents/OneDrive/Documents/UVM/PhD/Smelt/Smelt_Demographic_Data")
dat <- read.csv("MasterFileSmeltBio1984-2015-2-24-16.csv", na.strings=c("","NA"))
smelt <- subset(dat, Species == "Rainbow Smelt" )
smelt$Year <- as.numeric(as.character(smelt$Year))
smelt <- subset(smelt, Age %in% c(1:4))
#remove all years before 1990
smelt1990 <- subset(smelt, Year >= 1990)
#Bernie suggests cutting data to 2000
#smelt2000 <- subset(smelt, Year >= 2000)
df1990 <- ddply(smelt1990, .(Basin), transform,
sum.n = length(Age))
df2 <- ddply(df1990, .(Basin, Age), summarise,
n = length(Age), prop = n / sum.n[1])
smelt1990 <- subset(smelt1990, Age %in% c(1:4))
smelt1990 <- droplevels(smelt1990)
nrow(smelt)
basinBYage <- table(smelt1990$Age,smelt1990$Basin)
(cs <- chisq.test(basinBYage))
cs$residuals
basinBYage
cs$p.value
cs$parameter
cs$observed
cs$expected
?chisq.test
cs$observed-cs$expected
sum(cs$observed[Northeast])
sum(cs$observed["Northeast"])
basinBYage[Northeast]
basinBYage["Northeast"]
basinBYage[,"Northeast"]
sum(basinBYage[,"Northeast"])
148/4676
library(ggplot2)
library(plyr)
library(raster)
library(gridExtra)
library(grid)
library(ggpubr)
setwd("~/Documents/OneDrive/Documents/UVM/PhD/Smelt/Smelt_Demographic_Data")
dat <- read.csv("MasterFileSmeltBio1984-2015-2-24-16.csv", na.strings=c("","NA"))
dat <- read.csv("MasterFileSmeltBio1984-2015-2-24-16.csv", na.strings=c("","NA"))
smelt <- subset(dat, Species == "Rainbow Smelt" )
smelt$Year <- as.numeric(as.character(smelt$Year))
smelt <- subset(smelt, Age %in% c(1,2,3,4))
smelt$Age <- droplevels(smelt$Age)
smelt1990 <- subset(smelt, Year > 1989)
smelt_length1990 <- subset(smelt1990, Length > 0)
smelt1990$Age <- as.numeric(as.character(smelt1990$Age))
p1_lenAtAge_totdat <- ggplot(data=smelt1990, aes(x=Age, y=Length, color = Basin,  shape = Basin)) +#dissertation figure
#geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, linetype = 1) +
#geom_line(position=position_dodge(0.0)) +
stat_summary(fun.y="mean", geom="point", size = 3)+#add only the mean of each age
#stat_summary(fun.y="mean", geom="line", size = .5)+
stat_summary(fun.data = mean_se, geom = "errorbar", linetype = 1,  width=0.2)+ #add error bar of SE
#geom_smooth(method = lm, color = "black", show.legend =F)+##publication figure
geom_smooth(method = lm,  show.legend =F)+#Disertation figure
#geom_point(position=position_dodge(0.0), size=3)+
scale_x_continuous(breaks=unique(smelt1990$Age))+
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+#dissertation figure
scale_linetype_discrete (name = "", labels = c("", "", "")) +
scale_shape_discrete (name = "Basin", breaks=c("Main Lake", "Malletts", "Northeast"),
labels=c("Main Lake", "Malletts Bay", "Northeast Arm"))+
ylab("Length (mm)")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1, color = "black"),
axis.text.y=element_text(size=16,hjust=1, color = "black"),
axis.title=element_text(size=20),
#legend.text=element_text(size=20),
#legend.title=element_text(size=22),
#legend.key = element_rect(fill = "white", colour = NA),
#legend.position = c(.15,.8),
#legend.box = 'horizontal',
#legend.margin = margin(r = 0, l = 0))#+
legend.position = "none")
p1_lenAtAge_totdat
smelt_1 <- subset(smelt1990, Age < 5)
lm1 <- lm(Length~Basin*as.factor(Age)*as.factor(Year), data = smelt_length1990)
(z <- anova(lm1))
z
z$Df
nrow(smelt_1)
x <- ddply(smelt_length1990, .(Basin,Age,Year), summarize,
mean = mean(Length, na.rm = T),
sd = sd(Length, na.rm = T),
N = length(Length))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, Age %in% c(1:6))
x <- droplevels(x)
x$Age <- as.numeric(as.character(x$Age))
age1 <- subset(x, Age == 1)
age1 <- subset(smelt1990, Age == 1)
anova(lm(Length~Basin*as.factor(Year), data = age1))
library(ggplot2)
library(plyr)
library(raster)
library(gridExtra)
library(grid)
library(ggpubr)
setwd("~/Documents/OneDrive/Documents/UVM/PhD/Smelt/Smelt Data")
CPUE <- read.csv("MasterFileTrawlCPUE1987-2015.csv")
cpue <- subset(CPUE, Comment == "")
cpue <- subset(cpue, !(Year%in% c("1987", "1988", "1989")))
x <- ddply(cpue, .(Basin, Year), summarize,
mean = mean(CPUE),
sd = sd(CPUE),
N = length(CPUE))
x$SE <- x$sd / sqrt(x$N)
x$Year <- as.numeric(as.character(x$Year))
p1 <- ggplot(data=x, aes(x=Year, y=mean, color = Basin, shape = Basin)) +# disseration figure
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, linetype = 1, position=position_dodge(0.3)) +
geom_line(position=position_dodge(0.3)) +
geom_point(position=position_dodge(0.3), size=3)+
scale_x_continuous(breaks=unique(x$Year))+
scale_y_continuous(breaks=c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000))+
scale_shape_manual(values=c(15,16,17))+#dissertation figure
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+#dissertation figure
ylab("CPUE")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1, color = "black"),
axis.text.y=element_text(size=16,hjust=1, color = "black"),
axis.title=element_text(size=20),
# legend.text=element_text(size=20),
# legend.title=element_text(size=22))
#legend.position="none")
legend.text = element_text(size = 16),
legend.title = element_text(size = 20),
#legend.position= c(0.15, 0.8)
legend.position= "bottom")
means <- aggregate(mean ~  Basin, x, mean)
means$mean <- -2
p2 <- ggplot(x, aes(x=Basin, y=mean, fill = Basin)) +
geom_boxplot(notch = T)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+# dissertation figure
#scale_fill_manual(values=c("#999999", "#999999", "#999999"))+#publication figure
#geom_point(data = x, aes(x= Basin,y= c(-250), shape = Basin), size = 3)+
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_blank(),
#axis.text.x=element_text(size = 20,angle=45, hjust=1,color = "black"),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_text(size=16,hjust=1, color = "black"),
axis.title=element_text(size=20),
legend.position="none")
sub <- ggplotGrob(p2)
p1 + annotation_custom(grob = sub, xmin = 1989, xmax = 1998, ymin = 4000, ymax =7000)
mean_byyear <- ddply(cpue, .(Basin, Year), summarize, mean.1 = mean(CPUE), sd = sd(CPUE))
lm_tot <- lm(mean.1~Basin*Year, mean_byyear, na.action = na.omit)
anova(lm_tot)
lm_tot <- lm(mean.1~Basin*Year, mean_byyear, na.action = na.omit)
a1 <- aov(mean.1~Basin*Year, mean_byyear)
x <- ddply(cpue, .(Basin, Year), summarize,
mean = mean(CPUE),
sd = sd(CPUE),
N = length(CPUE))
x$SE <- x$sd / sqrt(x$N)
x$Year <- as.numeric(as.character(x$Year))
p1 <- ggplot(data=x, aes(x=Year, y=mean, color = Basin, shape = Basin)) +# disseration figure
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, linetype = 1, position=position_dodge(0.3)) +
geom_line(position=position_dodge(0.3)) +
geom_point(position=position_dodge(0.3), size=3)+
scale_x_continuous(breaks=unique(x$Year))+
scale_y_continuous(breaks=c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000))+
scale_shape_manual(values=c(15,16,17))+#dissertation figure
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+#dissertation figure
ylab("CPUE")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1, color = "black"),
axis.text.y=element_text(size=16,hjust=1, color = "black"),
axis.title=element_text(size=20),
# legend.text=element_text(size=20),
# legend.title=element_text(size=22))
#legend.position="none")
legend.text = element_text(size = 16),
legend.title = element_text(size = 20),
#legend.position= c(0.15, 0.8)
legend.position= "bottom")
means <- aggregate(mean ~  Basin, x, mean)
means$mean <- -2
p2 <- ggplot(x, aes(x=Basin, y=mean, fill = Basin)) +
geom_boxplot(notch = T)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+# dissertation figure
#scale_fill_manual(values=c("#999999", "#999999", "#999999"))+#publication figure
#geom_point(data = x, aes(x= Basin,y= c(-250), shape = Basin), size = 3)+
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_blank(),
#axis.text.x=element_text(size = 20,angle=45, hjust=1,color = "black"),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_text(size=16,hjust=1, color = "black"),
axis.title=element_text(size=20),
legend.position="none")
sub <- ggplotGrob(p2)
p1 + annotation_custom(grob = sub, xmin = 1989, xmax = 1998, ymin = 4000, ymax =7000)
mean_byyear <- ddply(cpue, .(Basin, Year), summarize, mean.1 = mean(CPUE), sd = sd(CPUE))
cpue <- subset(cpue, !(Year%in% c("1987", "1988", "1989")))
cpue <- subset(CPUE, Comment == "")
CPUE <- read.csv("MasterFileTrawlCPUE1987-2015.csv")
setwd("~/Documents/OneDrive/Documents/UVM/PhD/Smelt/Smelt Data")
library(ggplot2)
library(plyr)
library(raster)
library(gridExtra)
library(grid)
library(ggpubr)
setwd("~/Documents/OneDrive/Documents/UVM/PhD/Smelt/Smelt_Demographic_Data")
CPUE <- read.csv("MasterFileTrawlCPUE1987-2015.csv")
cpue <- subset(CPUE, Comment == "")
cpue1990 <- subset(cpue, !(Year%in% c("1987", "1988", "1989")))
cpue2000 <- subset(cpue, !(Year%in% c("1987", "1988", "1989", "1990","1991","1992","1993","1994","1995","1996","1997","1998","1999")))
lm_tot <- lm(mean.1~Basin*Year, mean_byyear, na.action = na.omit)
mean_byyear <- ddply(cpue1990, .(Basin, Year), summarize, mean.1 = mean(CPUE), sd = sd(CPUE))
nrow(mean_byyear)
lm1 <- lm(Length~Basin*as.factor(Year)+as.factor(Age), data = smelt_length1990)
(z <- anova(lm1))
lm1 <- lm(Length~+as.factor(Age)+as.factor(Year)+Basin, data = smelt_length1990)
(z <- anova(lm1))
lm1 <- lm(Length~as.factor(Age)+as.factor(Year)+Basin, data = smelt_length1990)
(z <- anova(lm1))
lm1 <- lm(Length~as.factor(Age)+as.factor(Year)*Basin, data = smelt_length1990)
(z <- anova(lm1))
a1 <- aov(Length~as.factor(Age)+as.factor(Year)*Basin, data = smelt_length1990)
t <- TukeyHSD(x=a1,  conf.level=0.95)
t$`as.factor(Year):Basin`
t$Basin
t$`as.factor(Age)`
t$`as.factor(Year)`
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
