theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_text(size=16,hjust=1),
axis.title=element_text(size=20),
legend.position="none")
sub <- ggplotGrob(p2)
p1 + annotation_custom(grob = sub, xmin = 1986, xmax = 1993, ymin = 200, ymax =1400)
p1 <- ggplot(data=x, aes(x=Year, y=log(mean), color = Basin)) +
#geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, position=position_dodge(0.3)) +
geom_line(position=position_dodge(0.3)) +
geom_point(position=position_dodge(0.3), size=3)+
scale_x_continuous(breaks=unique(x$Year))+
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ylab("CPUE Age1 Smelt")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1),
axis.text.y=element_text(size=16,hjust=1),
axis.title=element_text(size=20),
legend.text=element_text(size=20),
legend.title=element_text(size=22))
p2 <- ggplot(x, aes(x=Basin, y=log(mean), fill = Basin)) +
geom_boxplot(notch = T)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_text(size=16,hjust=1),
axis.title=element_text(size=20),
legend.position="none")
sub <- ggplotGrob(p2)
p1 + annotation_custom(grob = sub, xmin = 1986, xmax = 1993, ymin = 200, ymax =1400)
head(df3_age_1)
df3_age_1 <- ddply(df3_age_1, .(Basin, Year), transform,
prop_pop = n*prop))
df3_age_1 <- ddply(df3_age_1, .(Basin, Year), transform,
prop_pop = n*prop)
head(df3_age_1)
df <- smelt[, c("Basin", "Year", "Age")]
df <- subset(df, !(Age %in% c("NA", "?", NA, 0)))
df <- droplevels(df)
df$Age <- as.numeric(as.character(df$Age))
df <- ddply(df, .(Basin, Year), transform,
sum.n = length(Age))
df2 <- ddply(df, .(Basin, Age, Year), summarise,
n = length(Age), prop = n / sum.n[1])
levels(df2$Basin) <- c(unique(as.character(cpue$Basin)))
df3 <- merge(cpue, df2, by = c("Basin", "Year"))
df3_age_1 <- subset(df3, Age == 1)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
head(df3_age_1)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(prop),
sd = sd(prop),
N = length(prop))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
p1 <- ggplot(data=x, aes(x=Year, y=mean, color = Basin)) +
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, position=position_dodge(0.3)) +
geom_line(position=position_dodge(0.3)) +
geom_point(position=position_dodge(0.3), size=3)+
scale_x_continuous(breaks=unique(x$Year))+
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ylab("CPUE Age1 Smelt")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1),
axis.text.y=element_text(size=16,hjust=1),
axis.title=element_text(size=20),
legend.text=element_text(size=20),
legend.title=element_text(size=22))
p1
unique(df3_age_1$Basin)
cor(df3_age_1$a1_cpue[df3_age_1$Basin == "Main Lake"], df3_age_1$a1_cpue[df3_age_1$Basin == "Northeast Arm"], method = c("pearson"))
df3_age_1$a1_cpue[df3_age_1$Basin == "Main Lake"]
cor(df3_age_1$a1_cpue[df3_age_1$Basin == "Main Lake"], df3_age_1$a1_cpue[df3_age_1$Basin == "Northeast Arm"], method = c("pearson"))
cor(df3_age_1$a1_cpue[df3_age_1$Basin == "Main Lake"], df3_age_1$a1_cpue[df3_age_1$Basin == "Northeast Arm"], method = c("pearson"), use='complete.obs')
?cor()
ml <- subset(df3_age_1, Basin == "Main Lake")
nea <- subset(df3_age_1, Basin == "Northeast Arm")
cor(ml$a1_cpue, nea$a1_cpue, method = c("pearson"), use='complete.obs')
unique(ml$Year)
unique(nea$Year)
ml <- subset(ml, Year %in% c(unique(nea$Year)))
cor(ml$a1_cpue, nea$a1_cpue, method = c("pearson"), use='complete.obs')
ml <- droplevels(ml)
cor(ml$a1_cpue, nea$a1_cpue, method = c("pearson"), use='complete.obs')
dimensions(nea)
str(nea)
str(ml)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
head(x)
nea <- subset(x, Basin == "Northeast Arm")
ml <- subset(x, Basin == "Main Lake")
ml <- subset(ml, Year %in% c(unique(nea$Year)))
ml <- droplevels(ml)
cor(ml$a1_cpue, nea$a1_cpue, method = c("pearson"), use='complete.obs')
head(nea)
cor(ml$mean, nea$mean, method = c("pearson"), use='complete.obs')
plot(cor(ml$mean, nea$mean, method = c("pearson"), use='complete.obs'))
cor.test(ml$mean, nea$mean, method = c("pearson"), use='complete.obs')
head(ml)
head(nea)
nea$mean
ml$mean
plot(ml$mean, nea$mean)
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
cor.test(ml$mean, nea$mean, method = c("spearman"), use='complete.obs')
cor.test(ml$mean, nea$mean, method = c("kendall"), use='complete.obs')
head(x)
x_1 <- reshape(x, idvar = "Year", timevar = "mean", direction = "wide")
head(x1)
head(x_1)
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
head(x_1)
library("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library("ggpubr")
update.packages()
update.packages(ggplot2)
update.packages("ggplot2")
library("ggpubr")
library("scales")
update.packages("scales")
library("ggpubr")
library(ggpubr)
ggscatter(my_data, x = "mpg", y = "wt",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
head(x1)
head(x_1)
library(ggplot2)
library(plyr)
library(raster)
library(raster)
library(gridExtra)
library(grid)
setwd("~/Documents/OneDrive/Documents/UVM/PhD/Smelt/Smelt Data")
dat <- read.csv("MasterFileSmeltBio1984-2015-2-24-16.csv", na.strings=c("","NA"))
dat <- read.csv("MasterFileSmeltBio1984-2015-2-24-16.csv", na.strings=c("","NA"))
smelt <- subset(dat, Species == "Rainbow Smelt" )
smelt$Year <- as.numeric(as.character(smelt$Year))
smelt$Year <- as.numeric(as.character(smelt$Year))
smelt_age1 <- subset(smelt, Age == 1)
smelt_age1 <- droplevels(smelt_age1)
smelt_age1 <- subset(smelt_age1, condition > 0.00 & condition < 2)
CPUE <- read.csv("MasterFileTrawlCPUE1987-2015.csv")
cpue <- subset(CPUE, Comment == "")
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
df <- smelt[, c("Basin", "Year", "Age")]
df <- subset(df, !(Age %in% c("NA", "?", NA, 0)))
df <- droplevels(df)
df$Age <- as.numeric(as.character(df$Age))
df <- ddply(df, .(Basin, Year), transform,
sum.n = length(Age))
levels(df2$Basin) <- c(unique(as.character(cpue$Basin)))
df3 <- merge(cpue, df2, by = c("Basin", "Year"))
df2 <- ddply(df, .(Basin, Age, Year), summarise,
n = length(Age), prop = n / sum.n[1])
levels(df2$Basin) <- c(unique(as.character(cpue$Basin)))
df3 <- merge(cpue, df2, by = c("Basin", "Year"))
df3_age_1 <- subset(df3, Age == 1)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
x$SE <- x$sd / sqrt(x$N)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
str(x_1)
ggscatter(x_1, x = "mean.Main Lake", y = "mean.Malletts Bay",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
ggscatter(x_1, x = mean.Main Lake, y = mean.Malletts Bay,
ggplot(x_1, aes(x="mean.Main Lake", y="mean.Malletts Bay")) +
geom_point(size=2, shape=23)
head(x_1)
ggplot(x_1, aes(x='mean.Main Lake', y='mean.Malletts Bay')) +
geom_point(size=2, shape=23)
levels(x$Basin)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
ggplot(x_1, aes(x=mean.ML, y=mean.MB)) +
geom_point(size=2, shape=23)
ggscatter(x_1, x = "mean.ML", y = "mean.MB",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
ggqqplot(x_1$mean.MB, ylab = "mean.ML")
ggqqplot(x_1$mean.MB, ylab = "mean.ML")
ggqqplot(x_1$mean.MB, ylab = "mean.NEA")
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.MB)
shapiro.test(x_1$mean.NEA)
shapiro.test(x_1$mean.ML)
cor.test(ml$mean, nea$mean, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.MB, x_1$mean.ML, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.MB, x_1$mean.NEA, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.NEA, x_1$mean.ML, method = c("spearman"), use='complete.obs')
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
x <- ddply(smelt_age1, .(Basin, Year), summarize,
mean = mean(condition),
sd = sd(condition),
N = length(condition))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
head(x)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
shapiro.test(x_1$mean.MB)
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
shapiro.test(x_1$mean.ML)
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.NEA)
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
cor.test(x_1$mean.MB, x_1$mean.ML, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.MB, x_1$mean.NEA, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.NEA, x_1$mean.ML, method = c("spearman"), use='complete.obs')
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE MB", ylab = "CPUE NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE ML", ylab = "CPUE ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE ML", ylab = "CPUE NEA")
x <- subset(x, N > 2)
p1 <- ggplot(data=x, aes(x=Year, y=mean, color = Basin)) +
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, position=position_dodge(0.3)) +
geom_line(position=position_dodge(0.3)) +
geom_point(position=position_dodge(0.3), size=3)+
scale_x_continuous(breaks=unique(x$Year))+
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ylab("Condition Age1 Smelt")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1),
axis.text.y=element_text(size=16,hjust=1),
axis.title=element_text(size=20),
legend.text=element_text(size=20),
legend.title=element_text(size=22))
p1
CPUE <- read.csv("MasterFileTrawlCPUE1987-2015.csv")
cpue <- subset(CPUE, Comment == "")
df <- smelt[, c("Basin", "Year", "Age")]
df <- subset(df, !(Age %in% c("NA", "?", NA, 0)))
df <- droplevels(df)
df$Age <- as.numeric(as.character(df$Age))
df <- ddply(df, .(Basin, Year), transform,
sum.n = length(Age))
df2 <- ddply(df, .(Basin, Age, Year), summarise,
n = length(Age), prop = n / sum.n[1])
levels(df2$Basin) <- c(unique(as.character(cpue$Basin)))
df3 <- merge(cpue, df2, by = c("Basin", "Year"))
df3_age_1 <- subset(df3, Age == 1)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
p1 <- ggplot(data=x, aes(x=Year, y=mean, color = Basin)) +
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE), colour="black", width=.1, position=position_dodge(0.3)) +
geom_line(position=position_dodge(0.3)) +
geom_point(position=position_dodge(0.3), size=3)+
scale_x_continuous(breaks=unique(x$Year))+
scale_colour_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ylab("CPUE Age1 Smelt")+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line())+
theme(axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),
axis.text.x=element_text(size=16, angle=45,hjust=1),
axis.text.y=element_text(size=16,hjust=1),
axis.title=element_text(size=20),
legend.text=element_text(size=20),
legend.title=element_text(size=22))
p1
cor.test(x_1$mean.MB, x_1$mean.ML, method = c("spearman"), use='complete.obs')
172-56
df3_age_1 <- ddply(df3_age_1, .(Basin, Year), transform,
prop_pop = n*prop)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(prop),
sd = sd(prop),
N = length(prop))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
shapiro.test(x_1$mean.MB)
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
shapiro.test(x_1$mean.ML)
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.NEA)
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
shapiro.test(x_1$mean.MB)
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
shapiro.test(x_1$mean.ML)
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.NEA)
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
cor.test(x_1$mean.MB, x_1$mean.ML, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.MB, x_1$mean.NEA, method = c("spearman"), use='complete.obs')
cor.test(x_1$mean.NEA, x_1$mean.ML, method = c("spearman"), use='complete.obs')
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
x <- ddply(smelt_age1, .(Basin, Year), summarize,
mean = mean(condition),
sd = sd(condition),
N = length(condition))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
shapiro.test(x_1$mean.MB)
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
ggqqplot(x_1$mean.MB, ylab = "mean.MB")
shapiro.test(x_1$mean.ML)
shapiro.test(x_1$mean.ML)
ggqqplot(x_1$mean.ML, ylab = "mean.ML")
shapiro.test(x_1$mean.NEA)
ggqqplot(x_1$mean.NEA, ylab = "mean.NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
x_1 <- subset(x_1, Year > 1985)
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition MB", ylab = "Condition NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Condition ML", ylab = "Condition NEA")
head(x_1)
CPUE <- read.csv("MasterFileTrawlCPUE1987-2015.csv")
cpue <- subset(CPUE, Comment == "")
df <- smelt[, c("Basin", "Year", "Age")]
df <- subset(df, !(Age %in% c("NA", "?", NA, 0)))
df <- droplevels(df)
df$Age <- as.numeric(as.character(df$Age))
df <- ddply(df, .(Basin, Year), transform,
sum.n = length(Age))
df2 <- ddply(df, .(Basin, Age, Year), summarise,
n = length(Age), prop = n / sum.n[1])
levels(df2$Basin) <- c(unique(as.character(cpue$Basin)))
df3 <- merge(cpue, df2, by = c("Basin", "Year"))
df3_age_1 <- subset(df3, Age == 1)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
df3_age_1 <- ddply(df3_age_1, .(Trawl.No.), transform,
a1_cpue = CPUE*prop)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
x <- subset(x, N > 2)
x <- ddply(df3_age_1, .(Basin, Year), summarize,
mean = mean(a1_cpue),
sd = sd(a1_cpue),
N = length(a1_cpue))
x$SE <- x$sd / sqrt(x$N)
levels(x$Basin) <- c("ML", "MB", "NEA")
x_1 <- reshape(x, idvar = "Year", timevar = "Basin", direction = "wide")
ggscatter(x_1, x = "mean.MB", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE MB", ylab = "CPUE NEA")
ggscatter(x_1, x = "mean.MB", y = "mean.ML",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE ML", ylab = "CPUE ML")
ggscatter(x_1, x = "mean.ML", y = "mean.NEA",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "CPUE ML", ylab = "CPUE NEA")
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
source('~/Documents/OneDrive/Rmd_website_Peter/peuclide.github.io/build_site.R', echo=TRUE)
